org: jorgeleandro
service: tablas

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 1024
  timeout: 29
  region: us-east-1
  iam:
    role: arn:aws:iam::880764721962:role/LabRole
  environment:
    TABLE_NAME_USUARIOS: t_usuarios
    TABLE_NAME_CINES: t_cines
    TABLE_NAME_CARTELERA: t_cartelera
    TABLE_NAME_PELICULAS: t_peliculas
    TABLE_NAME_PROYECCIONES: t_proyecciones
    TABLE_NAME_VISITAS: t_visitas
    TABLE_NAME_TOKEN_ACCESO: t_token_acceso

resources:
  Resources:
    # Tabla de Usuarios
    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_USUARIOS}
        AttributeDefinitions:
          - AttributeName: "cinema_id"
            AttributeType: "S"
          - AttributeName: "user_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "cinema_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "user_id"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST

    # Tabla de Cines
    CinesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_CINES}
        AttributeDefinitions:
          - AttributeName: "cinema_id"
            AttributeType: "S"
          - AttributeName: "cinema_name"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "cinema_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "cinema_name"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST

    # Tabla de Cartelera
    CarteleraTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_CARTELERA}
        AttributeDefinitions:
          - AttributeName: "cinema_id"
            AttributeType: "S"
          - AttributeName: "title"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "cinema_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "title"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST

    # Tabla de Películas
    PeliculasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_PELICULAS}
        AttributeDefinitions:
          - AttributeName: "cinema_id"
            AttributeType: "S"
          - AttributeName: "title"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "cinema_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "title"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST

    # Tabla de Proyecciones
    ProyeccionesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_PROYECCIONES}
        AttributeDefinitions:
          - AttributeName: "cinema_id"
            AttributeType: "S"
          - AttributeName: "cinema_name"
            AttributeType: "S"
          - AttributeName: "show_id"
            AttributeType: "S"  # Para filtrar por show_id
        KeySchema:
          - AttributeName: "cinema_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "cinema_name"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST  # No provisioned throughput, usando "on-demand"

        # Índice Global Secundario (GSI) para filtrar por show_id
        GlobalSecondaryIndexes:
          - IndexName: "ShowIdIndex"
            KeySchema:
              - AttributeName: "cinema_id"
                KeyType: "HASH"
              - AttributeName: "show_id"
                KeyType: "RANGE"
            Projection:
              ProjectionType: "ALL"

    # Tabla de Visitas
    VisitasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_VISITAS}
        AttributeDefinitions:
          - AttributeName: "user_id"
            AttributeType: "S"
          - AttributeName: "visita_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "user_id"
            KeyType: "HASH"  # Partition key
          - AttributeName: "visita_id"
            KeyType: "RANGE" # Sort key
        BillingMode: PAY_PER_REQUEST

    # Tabla de Token de Acceso (sin cambios)
    TokenAccesoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_TOKEN_ACCESO}
        AttributeDefinitions:
          - AttributeName: "token_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "token_id"
            KeyType: "HASH"  # Partition key
        BillingMode: PAY_PER_REQUEST
